// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  posts     Post[]
  profile   Profile?
  comments  Comment[]
  likes     Like[]
  followers Follower[] @relation("UserFollowers")
  following Follower[] @relation("UserFollowing")
}

model Profile {
  id        Int      @id @default(autoincrement())
  bio       String?
  avatarUrl String?
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  comments  Comment[]
  likes     Like[]

  @@index([createdAt])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  postId    Int
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Like {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Follower {
  id         Int  @id @default(autoincrement())
  followerId Int
  followingId Int
  follower   User @relation("UserFollowers", fields: [followerId], references: [id])
  following  User @relation("UserFollowing", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}
